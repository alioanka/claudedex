version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: trading-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tradingbot
      POSTGRES_USER: bot_user
      POSTGRES_PASSWORD: bot_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "127.0.0.1:5432:5432"  # CHANGE THIS LINE - Add 127.0.0.1:
    networks:
      - trading-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bot_user -d tradingbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: trading-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - trading-network

  trading-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading-bot
    # restart: unless-stopped
    restart: "no"  # Changed to prevent restart loop
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgresql://bot_user:bot_password@postgres:5432/tradingbot
      REDIS_URL: redis://redis:6379/0
      LOG_LEVEL: INFO
      PYTHONUNBUFFERED: "1"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - trading-network

volumes:
  postgres-data:
  redis-data:

networks:
  trading-network:
    driver: bridge